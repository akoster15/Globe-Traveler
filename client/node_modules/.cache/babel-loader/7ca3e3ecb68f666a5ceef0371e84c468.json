{"ast":null,"code":"var _jsxFileName = \"/Users/David/Documents/other-gt-work/Homework/proj-3/proj-3/client/src/App.js\",\n    _s = $RefreshSig$();\n\n// We import useState and useEffect in our component\nimport React, { useState, useEffect } from 'react';\nimport PlaceList from './components/PlaceList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // We declare a state variable that is an array called `issues` and a function to update it.\n  const [places, setPlaces] = useState([]); // When the page loads, we invoke our getRepoIssues method and pass in 'facebook/react' as the repo name\n  // This only runs once because of our empty dependency array.\n\n  useEffect(() => {\n    getPlaces();\n  }, []); // React.useEffect(() => {\n  //   fetch(\"https://wft-geo-db.p.rapidapi.com/v1/geo/cities?limit=10\", {\n  //   \"method\": \"GET\",\n  //   \"headers\": {\n  //     \"x-rapidapi-host\": \"wft-geo-db.p.rapidapi.com\",\n  //     \"x-rapidapi-key\": \"9610a05b5amshd976184d69c9411p1b38bdjsn299a5e3639b6\"\n  //   }\n  // })\n  // .then(response => {\n  //   return response.json();\n  // })\n  // .then(res => {\n  //   console.log(res.data);\n  //   let cityList = res.data;\n  //   for(let i=0; i<cityList.length; i++){\n  //     setPlaces([...places, cityList[i].city]);\n  //     console.log(cityList[i].city);\n  //   }\n  //   console.log(places);\n  // })\n  // .catch(err => {\n  //   console.error(err);\n  // });\n  // },[]);\n  // Helper function that preforms an API request and sets the `issues` array to a list of issues from GitHub\n\n  const getPlaces = () => {\n    fetch(\"https://wft-geo-db.p.rapidapi.com/v1/geo/cities?limit=10\", {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"wft-geo-db.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"9610a05b5amshd976184d69c9411p1b38bdjsn299a5e3639b6\"\n      }\n    }).then(response => {\n      return response.json();\n    }).then(res => {\n      console.log(res.data);\n      let cityList = res.data;\n      let cities = [];\n\n      for (let i = 0; i < cityList.length + 1; i++) {\n        if (i == cityList.length) {\n          setPlaces(cities);\n          return;\n        } // setPlaces([...places, cityList[i].city]);\n\n\n        cities.push(cityList[i].city);\n        console.log(cityList[i].city);\n      } // console.log(places);\n      // return\n\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"header\",\n      children: \"GitHub issues for 'facebook/react'\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-primary\",\n      children: [\"Stored in state variable \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"issues\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui grid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-11\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Ez2sxHqHwXplpokbasymv65s8jQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/David/Documents/other-gt-work/Homework/proj-3/proj-3/client/src/App.js"],"names":["React","useState","useEffect","PlaceList","App","places","setPlaces","getPlaces","fetch","then","response","json","res","console","log","data","cityList","cities","i","length","push","city","catch","err","error"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC,CAFa,CAIb;AACA;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT,CANa,CAUb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,QAAMA,SAAS,GAAG,MAAM;AACtBC,IAAAA,KAAK,CAAC,0DAAD,EAA6D;AAChE,gBAAU,KADsD;AAEhE,iBAAW;AACT,2BAAmB,2BADV;AAET,0BAAkB;AAFT;AAFqD,KAA7D,CAAL,CAOCC,IAPD,CAOMC,QAAQ,IAAI;AAChB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KATD,EAUCF,IAVD,CAUMG,GAAG,IAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACA,UAAIC,QAAQ,GAAGJ,GAAG,CAACG,IAAnB;AACA,UAAIE,MAAM,GAAG,EAAb;;AACA,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACF,QAAQ,CAACG,MAAT,GAAgB,CAA/B,EAAkCD,CAAC,EAAnC,EAAsC;AACpC,YAAGA,CAAC,IAAEF,QAAQ,CAACG,MAAf,EAAsB;AACpBb,UAAAA,SAAS,CAACW,MAAD,CAAT;AACA;AACD,SAJmC,CAKpC;;;AACAA,QAAAA,MAAM,CAACG,IAAP,CAAYJ,QAAQ,CAACE,CAAD,CAAR,CAAYG,IAAxB;AACAR,QAAAA,OAAO,CAACC,GAAR,CAAYE,QAAQ,CAACE,CAAD,CAAR,CAAYG,IAAxB;AACD,OAZU,CAaX;AACA;;AACD,KAzBD,EA0BCC,KA1BD,CA0BOC,GAAG,IAAI;AACZV,MAAAA,OAAO,CAACW,KAAR,CAAcD,GAAd;AACD,KA5BD;AA6BD,GA9BD;;AAgCA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA,2DAC2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAD3B;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GApFQnB,G;;KAAAA,G;AAsFT,eAAeA,GAAf","sourcesContent":["// We import useState and useEffect in our component\nimport React, { useState, useEffect } from 'react';\nimport PlaceList from './components/PlaceList';\n\nfunction App() {\n  // We declare a state variable that is an array called `issues` and a function to update it.\n  const [places, setPlaces] = useState([]);\n\n  // When the page loads, we invoke our getRepoIssues method and pass in 'facebook/react' as the repo name\n  // This only runs once because of our empty dependency array.\n  useEffect(() => {\n    getPlaces();\n  }, []);\n\n  // React.useEffect(() => {\n  //   fetch(\"https://wft-geo-db.p.rapidapi.com/v1/geo/cities?limit=10\", {\n  //   \"method\": \"GET\",\n  //   \"headers\": {\n  //     \"x-rapidapi-host\": \"wft-geo-db.p.rapidapi.com\",\n  //     \"x-rapidapi-key\": \"9610a05b5amshd976184d69c9411p1b38bdjsn299a5e3639b6\"\n  //   }\n  // })\n  // .then(response => {\n  //   return response.json();\n  // })\n  // .then(res => {\n  //   console.log(res.data);\n  //   let cityList = res.data;\n  //   for(let i=0; i<cityList.length; i++){\n  //     setPlaces([...places, cityList[i].city]);\n  //     console.log(cityList[i].city);\n  //   }\n  //   console.log(places);\n  // })\n  // .catch(err => {\n  //   console.error(err);\n  // });\n  // },[]);\n\n  // Helper function that preforms an API request and sets the `issues` array to a list of issues from GitHub\n  const getPlaces = () => {\n    fetch(\"https://wft-geo-db.p.rapidapi.com/v1/geo/cities?limit=10\", {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"wft-geo-db.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"9610a05b5amshd976184d69c9411p1b38bdjsn299a5e3639b6\"\n      }\n    })\n    .then(response => {\n      return response.json();\n    })\n    .then(res => {\n      console.log(res.data);\n      let cityList = res.data;\n      let cities = [];\n      for(let i=0; i<cityList.length+1; i++){\n        if(i==cityList.length){\n          setPlaces(cities);\n          return;\n        }\n        // setPlaces([...places, cityList[i].city]);\n        cities.push(cityList[i].city);\n        console.log(cityList[i].city);\n      }\n      // console.log(places);\n      // return\n    })\n    .catch(err => {\n      console.error(err);\n    });\n  };\n\n  return (\n    <div className=\"container\">\n      <h2 className=\"header\">GitHub issues for 'facebook/react'</h2>\n      <span className=\"text-primary\">\n        Stored in state variable <code>issues</code>\n      </span>\n      <hr></hr>\n      <div className=\"ui grid\">\n        <div className=\"row\">\n          <div className=\"col-11\">\n            {/* <PlaceList places={places} /> */}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}